@import (reference) 'syntax-variables';

atom-text-editor::shadow,
:host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: fadeout(@syntax-invisible-character-color, 70%);
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .search-results .marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
  }

  .search-results .marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
  }

  .comment {
    color: @light-gray;
  }

  .keyword {
    color: @syntax-color-keyword;

    &.control {
      // color: @purple;
      color: lighten(saturate(@syntax-color-keyword, 20%), 20%);
    }

    &.operator {
      // color: @syntax-text-color;
      color: saturate(spin(@syntax-color-keyword, 20%), 20%);

      &.comparison {
        color: @light-orange;
      }

      &.assignment {
        color: @syntax-color-variable;
      }

      &.logical {
        color: @light-orange;
      }
    }

    &.other.special-method {
      color: @blue;
    }

    &.other.unit {
      color: @orange;
    }
  }

  .storage {
    color: @purple;
  }

  .constant {
    // color: @orange;
    color: @syntax-color-constant;

    &.character.escape {
      color: @cyan;
    }

    &.numeric {
      // color: @orange;
    }

    &.other.color {
      color: @cyan;
    }

    &.other.symbol {
      color: @green;
    }
  }

  .variable {
    color: @syntax-color-variable;

    &.language {
      color: lighten(saturate(@syntax-color-variable, 20%), 20%);
    }

    &.interpolation {
      color: darken(@syntax-color-variable, 10%);
    }

    &.parameter.function {
      color: @syntax-text-color;
    }

    &.other {
      &.object {
        color: spin(saturate(@syntax-color-constant, 20%), 10%);
      }
    }
  }

  .invalid.illegal {
    background-color: @red;
    color: @syntax-background-color;
  }

  .string {
    color: @green;


    &.regexp {
      color: @cyan;

      .source.ruby.embedded {
        color: @orange;
      }
    }

    &.other.link {
      color: @red;
    }
  }

  .punctuation {
    &.definition {
      &.comment {
        color: @light-gray;
      }

      &.string,
      &.variable,
      &.parameters,
      &.array {
        color: @syntax-text-color;
      }

      &.heading,
      &.identity {
        color: @blue;
      }

      &.bold {
        color: @light-orange;
        font-weight: bold;
      }

      &.italic {
        color: @purple;
        font-style: italic;
      }

      &.tag {
        color: @syntax-color-tag;
        font-weight: bold;
      }
    }

    &.section.embedded {
      color: darken(@red, 10%);
    }
  }

  .support {
    &.class {
      color: @light-orange;
    }

    &.function {
      color: @cyan;

      &.any-method {
        color: @blue;
      }
    }
  }

  .entity {
    &.name.function {
      color: @blue;
    }

    &.name.type {
      color: @light-orange;
      // text-decoration: underline;
    }

    &.other.inherited-class {
      color: @green;
    }
    &.name.class,
    &.name.type.class {
      color: @light-orange;
    }

    &.name.section {
      color: @blue;
    }

    &.name.tag {
      color: @syntax-color-tag;
      // text-decoration: underline;
    }

    &.other.attribute-name {
      color: @syntax-color-attribute;

      &.id {
        // color: @blue;
      }
    }
  }

  .meta {
    &.class {
      color: @light-orange;
    }

    &.link {
      color: @orange;
    }

    &.require {
      color: @blue;
    }

    &.selector {
      color: @purple;
    }

    &.separator {
      background-color: @gray;
      color: @syntax-text-color;
    }
  }

  .none {
    color: @syntax-text-color;
  }

  .markup {
    &.bold {
      color: @orange;
      font-weight: bold;
    }

    &.changed {
      color: @purple;
    }

    &.deleted {
      color: @red;
    }

    &.italic {
      color: @purple;
      font-style: italic;
    }

    &.heading .punctuation.definition.heading {
      color: @blue;
    }

    &.inserted {
      color: @green;
    }

    &.list {
      color: @red;
    }

    &.quote {
      color: @orange;
    }

    &.raw.inline {
      color: @green;
    }
  }

  .source.gfm .markup {
    -webkit-font-smoothing: auto;
    &.heading {
      color: @green;
    }
  }

  // atom-text-editor[mini] .scroll-view,
  // :host([mini]) .scroll-view {
  //   padding-left: 1px;
  // }
}
